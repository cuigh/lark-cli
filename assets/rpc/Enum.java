// Generated by the lark-cli {{.ToolVersion}}.  DO NOT EDIT!
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
package {{.Package}}.constant;

import lark.core.lang.Description;
import lark.core.lang.EnumTitlable;
import lark.core.lang.EnumValuable;
import lark.core.util.Enums;

/**
 * {{.Description}}
 */
@Description("{{.Description}}")
public enum	{{.Name}} implements EnumValuable, EnumTitlable {
    {{- range $i, $f := .Fields}}
    {{- if gt $i 0}},{{end}}
    /**
     * {{.Description}}
     */
    {{.Name | upper}}({{.Value}}, "{{.Description}}")
    {{- end}};

    private int value;
    private String title;

    {{.Name}}(int value, String title) {
        this.value = value;
        this.title = title;
    }

    /**
     * 获取枚举的 int 值,用于数据保存以及序列化
     *
     * @return 枚举的 int 值
     */
    @Override
    public int value() {
        return this.value;
    }

    /**
     * 获取枚举的显示名称
     *
     * @return 枚举的显示名称
     */
    @Override
    public String title() {
        return this.title;
    }

    /**
     * 根据 int 值构建一个枚举对象
     *
     * @param value 需要构建枚举的 int 的值
     * @return 返回相应 value 值的枚举对象
     */
    public static {{.Name}} valueOf(int value) {
        return Enums.valueOf({{.Name}}.class, value);
    }
}